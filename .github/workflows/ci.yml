name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libboost-all-dev libssl-dev libyaml-cpp-dev libjsoncpp-dev libmodbus-dev libspdlog-dev
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug
      
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C Debug --output-on-failure
      
  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cppcheck
        
    - name: Run Cppcheck
      run: cppcheck --enable=all --std=c++17 --suppress=missingIncludeSystem --error-exitcode=1 -I include/ include/ src/
      
    - name: Install clang-format
      run: sudo apt-get install -y clang-format
      
    - name: Check code formatting
      run: |
        find include src tests -name "*.cpp" -o -name "*.h" | xargs clang-format -i --style=file
        git diff --exit-code
        
  package:
    needs: [build, static-analysis]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libboost-all-dev libssl-dev libyaml-cpp-dev libjsoncpp-dev libmodbus-dev libspdlog-dev
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release
      
    - name: Package
      working-directory: ${{github.workspace}}/build
      run: cpack -G DEB
      
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: ocpp-gateway-deb
        path: ${{github.workspace}}/build/*.deb